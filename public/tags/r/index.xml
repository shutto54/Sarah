<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Sarah&#39;s Data Science Blog</title>
    <link>https://example.org/tags/r/</link>
    <description>Recent content in R on Sarah&#39;s Data Science Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Powered by [Hugo](http://gohugo.io).</copyright>
    
	<atom:link href="https://example.org/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bar Plot</title>
      <link>https://example.org/post/bar-plot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/post/bar-plot/</guid>
      <description>Letâ€™s make a vector of class standing for our data science class. First load the libraries:
library(Lahman) library(sqldf) library(devtools) library(ggplot2) #extracting the data query&amp;lt;-&amp;quot;SELECT name,HR FROM Teams WHERE yearID=1980 ORDER BY HR&amp;quot; result&amp;lt;-sqldf(query) #result is a date frame; headers and columns and rows- like a spreadsheet #type result in console after doing ctrl enter #to just see column type &amp;#39;result$name&amp;#39; in console result$name&amp;lt;-factor(result$name,levels=result$name) #now result$name is permanently considered a factor, and now levels=result$name will order them the way you had them in the columns have x axis as team names #visualizing the data ggplot()+ geom_bar(data=result,aes(x=name,y=HR),stat=&amp;#39;identity&amp;#39;, color=&amp;#39;blue&amp;#39;,fill=&amp;#39;black&amp;#39;)+ coord_flip()+ xlab(&amp;quot;Team Name&amp;quot;)+ ylab(&amp;quot;Homeruns&amp;quot;)+ ggtitle(&amp;quot;1980 Team Homerun Distribution&amp;quot;) #coord_flip() flips the axis </description>
    </item>
    
    <item>
      <title>Histograms</title>
      <link>https://example.org/post/histograms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/post/histograms/</guid>
      <description>When you have one column of data and want to see how the data is spread out, you would use a histogram. First you load the libraries:
library(Lahman) library(sqldf) library(ggplot2) query&amp;lt;-&amp;quot;SELECT weight FROM Master&amp;quot; result&amp;lt;-sqldf(query) #visualizing the data ggplot()+ geom_histogram(data=result,aes(x=weight),color=&amp;quot;blue&amp;quot;,fill=&amp;quot;yellow&amp;quot;,bins=50)+ ggtitle(&amp;quot;Body-Weight Distribution for Baseball Players&amp;quot;) The bins is the amount of bars on the graph and the default is 30. The color is the outline of the bars while fill is the inside of the bars.</description>
    </item>
    
    <item>
      <title>Scatterplots</title>
      <link>https://example.org/post/scatterplots/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/post/scatterplots/</guid>
      <description>If one would like to find the career strikeouts versus homeruns for great hitters within the baseball world, they can make a scatterplot to show the data found. One can do this using R code, like so. First they would need to load their libraries (Lahman, sqldf, and ggplot2), then they may continue with the code.
library(Lahman) library(sqldf) library(devtools) library(ggplot2) #extracting data query&amp;lt;-&amp;quot;SELECT playerID,sum(HR) AS career_HR, sum(SO) AS career_SO FROM Batting GROUP BY playerID HAVING sum(HR)&amp;gt;=400&amp;quot; result&amp;lt;-sqldf(query) #visualizing data ggplot()+ geom_point(data=result,aes(x=sum(career_SO),y=sum(career_HR)))+ ggtitle(&amp;quot;Career Strikeouts v.</description>
    </item>
    
    <item>
      <title>Time Series</title>
      <link>https://example.org/post/time-series/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.org/post/time-series/</guid>
      <description>The x axis represents time, while the y is variable of your choice. First we load the libraries:
library(Lahman) library(sqldf) library(devtools) library(ggplot2) #extracting the data query&amp;lt;-&amp;quot;SELECT yearID,HR FROM Batting WHERE playerID=&amp;#39;ruthba01&amp;#39;&amp;quot; result&amp;lt;-sqldf(query) #visualizing the data ggplot()+ geom_point(data=result,aes(x=yearID,y=HR))+ geom_line(data=result,aes(x=yearID,y=HR))+ ggtitle(&amp;quot;Ruth&amp;#39;s Homerun Totals Through the Years&amp;quot;)+ xlab(&amp;quot;Year&amp;quot;)+ ylab(&amp;quot;Homeruns&amp;quot;) #if you do not want to see the points, comment out the geom_point line #then leave geom_line and then you have yourself a line graph </description>
    </item>
    
  </channel>
</rss>